#!/usr/bin/env bash

. /opt/startup/utils

# Download and verify the 'bootscript' asset from the latest release of ArchAvisto
printf "${BOLDCYAN}Downloading the bootscript...${ENDCOLOR}\n"
# Step 1: Pick the right API endpoint
if [ "$RELEASE" = "latest" ]; then
    release_url="https://api.github.com/repos/$OWNER/$REPO/releases/latest"
else
    release_url="https://api.github.com/repos/$OWNER/$REPO/releases/tags/$RELEASE"
fi

# 2. Fetch release JSON
release_json=$(curl --fail -s "$release_url")

# 3. Find asset metadata
asset_json=$(echo "$release_json" | jq -r ".assets[] | select(.name == \"$ASSET_NAME\")")

if [ -z "$asset_json" ] || [ "$asset_json" = "null" ]; then
	printf "${BOLDRED}[ERROR] could not find asset '$ASSET_NAME' GitHub '$RELEASE' release for ArchAvisto${ENDCOLOR}\n"
	exit 1
fi

asset_id=$(echo "$asset_json" | jq -r ".id")
# The digest field looks like "sha256:abcdef..."
digest_full=$(echo "$asset_json" | jq -r ".digest")

if [ -z "$digest_full" ] || [ "$digest_full" = "null" ]; then
	printf "${BOLDRED}[ERROR] no digest found in metadata for asset '$ASSET_NAME'${ENDCOLOR}\n"
	exit 1
fi

# Strip off "sha256:" prefix
expected_sha=${digest_full#sha256:}

# 4. Download asset via API (binary)
asset_url="https://api.github.com/repos/$OWNER/$REPO/releases/assets/$asset_id"

curl --fail -s -L \
	-H "Accept: application/octet-stream" \
	-o "$ASSET_FILE" \
	"$asset_url"

sleep 1

downloaded_sha=$(sha256sum "$ASSET_FILE" | awk '{print $1}')

if [ "$expected_sha" != "$downloaded_sha" ]; then
	printf "${BOLDRED}[ERROR] checksum mismatch for asset '$ASSET_NAME'${ENDCOLOR}\n"
	exit 1
fi

printf "${BOLDGREEN}Binary integrity verified successfully${ENDCOLOR}\n"
